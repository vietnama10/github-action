name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
#   job1:
#     runs-on: ubuntu-latest
#     outputs:
#       output1: ${{ steps.read_log.outputs.outputlog }}
#     steps:
#       - uses: actions/checkout@v3
#       - name: Read test result
#         id: read_log
#         if: always()
#         run: |
#           echo ::set-output name=outputlog::$(tail -3 test-results.txt)
#       - name: Output
#         if: always()
#         id: output
#         run: |
#           echo "### ${{ steps.read_log.outputs.outputlog }}" >> $GITHUB_STEP_SUMMARY
#           echo "| Tests :rocket: | Assertions :heavy_check_mark: | Failures :x: |" >> $GITHUB_STEP_SUMMARY
#           echo "| --- | --- | --- |" >> $GITHUB_STEP_SUMMARY
#           echo "| 4 | 12 | 11 |" >> $GITHUB_STEP_SUMMARY
#       - name: Publish Test Results
#         uses: EnricoMi/publish-unit-test-result-action@v1
#         if: always()
#         with:
#           files: clover.xml
  job2:
    runs-on: ubuntu-latest
    steps:
      - name: Read job2 summary
        run: |
          echo "Sumarrrryyyyyy :rocket:" >> $GITHUB_STEP_SUMMARY
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Run sonarqube container
        run: docker run --rm -d -p 9000:9000 sonarqube:lts-community
      - name: View docker containers
        run: docker ps -a
      - name: SonarQube Scan
        run: curl -L 0.0.0.0:9000
      - name: Sonar scan using docker
        run: docker run --rm -e SONAR_HOST_URL="0.0.0.0:9000" -e SONAR_LOGIN="myAuthenticationToken" -v "$(pwd):/usr/src" sonarsource/sonar-scanner-cli
      - name: View docker containers again
        run: docker ps -a

